Index: krfb/connectioncontroller.cpp
===================================================================
--- krfb/connectioncontroller.cpp	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ krfb/connectioncontroller.cpp	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -36,6 +36,7 @@
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
+#include <strings.h>
 
 
 static QString peerAddress(int sock) {
Index: krfb/events.cpp
===================================================================
--- krfb/events.cpp	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ krfb/events.cpp	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -84,11 +84,11 @@
     if(isShift && mod != 1) {
         if(ModifierState & LEFTSHIFT) {
             XTestFakeKeyEvent(dpy, leftShiftCode,
-                            !down, CurrentTime);
+                            down, CurrentTime);
         }
         if(ModifierState & RIGHTSHIFT) {
             XTestFakeKeyEvent(dpy, rightShiftCode,
-                            !down, CurrentTime);
+                            down, CurrentTime);
         }
     }
 
Index: kopete/kopete/chatwindow/chatview.cpp
===================================================================
--- kopete/kopete/chatwindow/chatview.cpp	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ kopete/kopete/chatwindow/chatview.cpp	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -543,7 +543,7 @@
 		this, SLOT( slotPropertyChanged( Kopete::PropertyContainer *, const QString &, const QVariant &, const QVariant & ) ) ) ;
 	}
 
-	if( !suppress && m_manager->members().count() > 1 ) {
+	if( !suppress && Kopete::BehaviorSettings::self()->showEvents() && m_manager->members().count() > 1 ) {
 		QString contactName = m_messagePart->formatName(contact, Qt::PlainText);
 		sendInternalMessage(  i18n("%1 has joined the chat.", contactName) );
 	}
@@ -588,7 +588,7 @@
 			}
 		}
 
-		if ( !suppressNotification )
+		if ( !suppressNotification && Kopete::BehaviorSettings::self()->showEvents() )
 		{
 			QString contactName = m_messagePart->formatName(contact, Qt::PlainText);
 			if ( reason.isEmpty() )
Index: kopete/libkopete/kopeteavatarmanager.cpp
===================================================================
--- kopete/libkopete/kopeteavatarmanager.cpp	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ kopete/libkopete/kopeteavatarmanager.cpp	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -178,7 +178,7 @@
 	// for the contact avatar, save it with the contactId + .png
 	if (newEntry.category == AvatarManager::Contact && newEntry.contact)
 	{
-		avatarFilename = newEntry.contact->contactId() + ".png";
+		avatarFilename = KIO::encodeFileName(newEntry.contact->contactId()) + ".png";
 	}
 	else
 	{
@@ -199,7 +199,7 @@
 
 	if( !avatar.save( avatarUrl.toLocalFile(), "PNG") )
 	{
-		kDebug(14010) << "Saving of " << avatarUrl.toLocalFile() << " failed !";
+		kDebug(14010) << "Saving of scaled avatar to " << avatarUrl.toLocalFile() << " failed !";
 		return AvatarEntry();
 	}
 
@@ -208,7 +208,7 @@
 	// for the contact avatar, save it with the contactId + .png
 	if (newEntry.category == AvatarManager::Contact && newEntry.contact)
 	{
-		dataFilename = newEntry.contact->contactId() + QLatin1String("_");
+		dataFilename = KIO::encodeFileName(newEntry.contact->contactId()) + QLatin1String("_");
 	}
 
 	dataFilename += KMD5(data).hexDigest();
@@ -223,7 +223,7 @@
 	QFile f(dataUrl.toLocalFile());
 	if (!f.open(QIODevice::WriteOnly))
 	{
-		kDebug(14010) << "Saving of " << dataUrl.toLocalFile() << " failed !";
+		kDebug(14010) << "Saving of original avatar to " << dataUrl.toLocalFile() << " failed !";
 		return AvatarEntry();
 	}
 	f.write(data);
Index: kget/core/datasourcefactory.h
===================================================================
--- kget/core/datasourcefactory.h	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ kget/core/datasourcefactory.h	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -216,6 +216,7 @@
          * Kills the putjob and starts the moving of files
          */
         void startMove();
+        void slotPutJobDestroyed(QObject *job);
         void newDestResult(KJob *job);
 
         void slotRepair(const QList<KIO::fileoffset_t> &offsets, KIO::filesize_t length);
Index: kget/core/datasourcefactory.cpp
===================================================================
--- kget/core/datasourcefactory.cpp	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ kget/core/datasourcefactory.cpp	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -27,6 +27,7 @@
 #include <KIO/NetAccess>
 #include <KLocale>
 #include <KMessageBox>
+#include <kmountpoint.h>
 
 #include <KDebug>
 
@@ -212,6 +213,7 @@
         if (!m_putJob) {
             m_putJob = KIO::open(m_dest, QIODevice::WriteOnly | QIODevice::ReadOnly);
             connect(m_putJob, SIGNAL(open(KIO::Job*)), this, SLOT(open(KIO::Job*)));
+            connect(m_putJob, SIGNAL(destroyed(QObject*)), this, SLOT(slotPutJobDestroyed(QObject*)));
             m_startTried = true;
             return;
         }
@@ -259,6 +261,19 @@
     }
 
     if (m_open) {
+        //check if the filesystem supports a file of m_size
+        const static KIO::filesize_t maxFatSize = 4294967295;
+        if (m_size > maxFatSize) {
+            KMountPoint::Ptr mountPoint = KMountPoint::currentMountPoints().findByPath(m_dest.directory());
+            if (!mountPoint.isNull()) {
+                if (mountPoint->mountType() == "vfat") {//TODO check what is reported on Windows for vfat
+                    stop();
+                    kError(5001) << "Filesize is larger than maximum file size supported by VFAT.";
+                    return;
+                }
+            }
+        }
+
         QFile::resize(m_dest.pathOrUrl(), m_size);//TODO should we keep that?
         m_speedTimer->start();
 
@@ -765,6 +780,13 @@
     }
 }
 
+void DataSourceFactory::slotPutJobDestroyed(QObject *job)
+{
+    Q_UNUSED(job)
+
+    m_putJob = 0;
+}
+
 bool DataSourceFactory::setNewDestination(const KUrl &newDestination)
 {
     m_newDest = newDestination;
Index: kget/mainwindow.cpp
===================================================================
--- kget/mainwindow.cpp	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ kget/mainwindow.cpp	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -504,8 +504,6 @@
                 KStandardGuiItem::quit(), KStandardGuiItem::cancel(),
                 "ExitWithActiveTransfers") != KMessageBox::Yes)
             return;
-
-        KGet::setSchedulerRunning(false);
     }
 
     Settings::self()->writeConfig();
Index: kget/plasma/applet/piechart/kgetpiechart.cpp
===================================================================
--- kget/plasma/applet/piechart/kgetpiechart.cpp	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ kget/plasma/applet/piechart/kgetpiechart.cpp	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -85,14 +85,16 @@
 {
     m_angles.clear();
 
-    QHash<OrgKdeKgetTransferInterface*, Data>::const_iterator it;
-    QHash<OrgKdeKgetTransferInterface*, Data>::const_iterator itEnd = m_data->constEnd();
-    int startAngle = 90 * 16;
-    for (it = m_data->constBegin(); it != itEnd; ++it) {
-        const int span = (-1 * ((it.value().size * 360 * 16) / m_totalSize));
-        m_angles[it.key()] = qMakePair(startAngle, span);
+    if (m_totalSize) {
+        QHash<OrgKdeKgetTransferInterface*, Data>::const_iterator it;
+        QHash<OrgKdeKgetTransferInterface*, Data>::const_iterator itEnd = m_data->constEnd();
+        int startAngle = 90 * 16;
+        for (it = m_data->constBegin(); it != itEnd; ++it) {
+            const int span = (-1 * ((it.value().size * 360 * 16) / m_totalSize));
+            m_angles[it.key()] = qMakePair(startAngle, span);
 
-        startAngle += span;
+            startAngle += span;
+        }
     }
 }
 
@@ -102,7 +104,7 @@
 
     kDebug() << "Repaint";
 
-    if (m_angles.count() != m_data->count()) {
+    if (m_totalSize && (m_angles.count() != m_data->count())) {
         createAngles();
     }
 
@@ -139,7 +141,7 @@
         p->drawPie(rect, angles.first, angles.second);
 
         p->setOpacity(ACTIVE_PIE_OPACITY);
-        if (!data.isFinished) {
+        if (m_totalSize && !data.isFinished) {
             angles.second = (-1 * ((data.downloadedSize * 360 * 16) / m_totalSize));
         }
         p->drawPie(QRect(rect.x() + 15, rect.y() + 15, rect.width() - 30, rect.height() - 30), angles.first, angles.second);
Index: kget/plasma/runner/kgetrunner.cpp
===================================================================
--- kget/plasma/runner/kgetrunner.cpp	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ kget/plasma/runner/kgetrunner.cpp	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -3,6 +3,7 @@
  *
  *   Copyright (C) 2009 Tomas Van Verrewegen <tomasvanverrewegen@telenet.be>
  *   Copyright (C) 2009 Lukas Appelhans <l.appelhans@gmx.de>
+ *   Copyright (C) 2010 Matthias Fuchs <mat69@gmx.net>
  *
  *   This program is free software; you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published
@@ -29,8 +30,6 @@
 {
     setObjectName("KGet");
     addSyntax(Plasma::RunnerSyntax(":q:", i18n("Find all links in :q: and download them with KGet.")));
-    
-    m_kget = new OrgKdeKgetMainInterface(KGET_DBUS_SERVICE, KGET_DBUS_PATH, QDBusConnection::sessionBus(), this);
 }
 
 
@@ -38,6 +37,12 @@
 {
 }
 
+void KGetRunner::init()
+{
+    m_kget = new OrgKdeKgetMainInterface(KGET_DBUS_SERVICE, KGET_DBUS_PATH, QDBusConnection::sessionBus(), this);
+    m_interface = QDBusConnection::sessionBus().interface();
+}
+
 void KGetRunner::match(Plasma::RunnerContext& context)
 {
     QString query = context.query();
@@ -116,7 +121,7 @@
         //  We check if the match is a valid URL, if the protocol is handled by KGet,
         //  and if the host is not empty, otherwise "http://" would also be matched.
         KUrl url(re.cap());
-        if (QDBusConnection::sessionBus().interface()->isServiceRegistered(KGET_DBUS_SERVICE) 
+        if (m_interface->isServiceRegistered(KGET_DBUS_SERVICE)
             ? m_kget->isSupported(url.url()).value()
             : (url.isValid() && url.hasHost())) {
             urls << url.url();
Index: kget/plasma/runner/kgetrunner.h
===================================================================
--- kget/plasma/runner/kgetrunner.h	(.../tags/KDE/4.5.0/kdenetwork)	(wersja 1165577)
+++ kget/plasma/runner/kgetrunner.h	(.../branches/KDE/4.5/kdenetwork)	(wersja 1165577)
@@ -3,6 +3,7 @@
  *
  *   Copyright (C) 2009 Tomas Van Verrewegen <tomasvanverrewegen@telenet.be>
  *   Copyright (C) 2009 Lukas Appelhans <l.appelhans@gmx.de>
+ *   Copyright (C) 2010 Matthias Fuchs <mat69@gmx.net>
  *
  *   This program is free software; you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published
@@ -17,6 +18,8 @@
 
 #include <Plasma/AbstractRunner>
 #include <KIcon>
+
+class QDBusConnectionInterface;
 class QDBusPendingCallWatcher;
 
 
@@ -26,25 +29,27 @@
     Q_OBJECT
 
     public:
-        
-    KGetRunner(QObject* parent, const QVariantList& args);
-    ~KGetRunner();
+        KGetRunner(QObject* parent, const QVariantList& args);
+        ~KGetRunner();
 
-    void match(Plasma::RunnerContext& context);
-    void run(const Plasma::RunnerContext& context, const Plasma::QueryMatch& match);
-    
+        void match(Plasma::RunnerContext& context);
+        void run(const Plasma::RunnerContext& context, const Plasma::QueryMatch& match);
+
+    protected slots:
+        void init();
+
     private slots:
-    
-    void showNewTransferDialog();
-    void callFinished(QDBusPendingCallWatcher* call);
-        
+        void showNewTransferDialog();
+        void callFinished(QDBusPendingCallWatcher* call);
+
     private:
-    
-    QStringList parseUrls(const QString& text) const;
-    
-    OrgKdeKgetMainInterface * m_kget;
-    KIcon m_icon;
-    QStringList m_urls;
+        QStringList parseUrls(const QString& text) const;
+
+    private:
+        QDBusConnectionInterface *m_interface;
+        OrgKdeKgetMainInterface *m_kget;
+        KIcon m_icon;
+        QStringList m_urls;
 };
 
 

Zmiany atrybutów dla: .
___________________________________________________________________
Dodane: svn:externals
   + 


